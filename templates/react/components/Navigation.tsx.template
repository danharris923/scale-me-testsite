import React, { useState } from 'react';
import Link from 'next/link';
import { useRouter } from 'next/router';

interface {{ name }}Props {
  {% for prop_name, prop_type in props.items() %}
  {{ prop_name }}: {{ prop_type }};
  {% endfor %}
  brandName: string;
  categories: string[];
  showSearch?: boolean;
}

const {{ name }}: React.FC<{{ name }}Props> = ({
  {% for prop_name in props.keys() %}
  {{ prop_name }},
  {% endfor %}
  brandName,
  categories,
  showSearch = true
}) => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [searchQuery, setSearchQuery] = useState('');
  const router = useRouter();

  const handleSearch = (e: React.FormEvent) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      router.push(`/search?q=${encodeURIComponent(searchQuery)}`);
    }
  };

  const isActive = (path: string) => {
    return router.pathname === path;
  };

  return (
    <nav className="sticky top-0 z-50 bg-white shadow-md border-b border-gray-200">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          
          {/* Logo */}
          <div className="flex items-center">
            <Link href="/" className="flex items-center space-x-2">
              <div className="w-8 h-8 bg-{{ conversion_colors.primary or 'blue-600' }} rounded-lg flex items-center justify-center">
                <svg className="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                </svg>
              </div>
              <span className="text-xl font-bold text-gray-900">{{ brandName }}</span>
            </Link>
          </div>

          {/* Desktop Navigation */}
          <div className="hidden md:flex items-center space-x-8">
            <Link 
              href="/" 
              className={`text-gray-700 hover:text-{{ conversion_colors.primary or 'blue-600' }} px-3 py-2 rounded-md text-sm font-medium transition-colors ${
                isActive('/') ? 'text-{{ conversion_colors.primary or "blue-600" }} bg-{{ conversion_colors.primary or "blue-50" }}' : ''
              }`}
            >
              Home
            </Link>
            
            {/* Categories Dropdown */}
            <div className="relative group">
              <button className="text-gray-700 hover:text-{{ conversion_colors.primary or 'blue-600' }} px-3 py-2 rounded-md text-sm font-medium transition-colors flex items-center">
                Categories
                <svg className="ml-1 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                </svg>
              </button>
              
              {/* Dropdown Menu */}
              <div className="absolute left-0 mt-2 w-56 bg-white rounded-md shadow-lg border border-gray-200 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50">
                <div className="py-2">
                  <Link 
                    href="/categories" 
                    className="block px-4 py-2 text-sm text-gray-700 hover:bg-{{ conversion_colors.primary or 'blue-50' }} hover:text-{{ conversion_colors.primary or 'blue-600' }}"
                  >
                    All Categories
                  </Link>
                  {categories.slice(0, 6).map((category) => (
                    <Link 
                      key={category}
                      href={`/category/${category.toLowerCase().replace(' ', '-')}`}
                      className="block px-4 py-2 text-sm text-gray-700 hover:bg-{{ conversion_colors.primary or 'blue-50' }} hover:text-{{ conversion_colors.primary or 'blue-600' }}"
                    >
                      {category}
                    </Link>
                  ))}
                </div>
              </div>
            </div>

            <Link 
              href="/deals" 
              className={`text-gray-700 hover:text-{{ conversion_colors.primary or 'blue-600' }} px-3 py-2 rounded-md text-sm font-medium transition-colors ${
                isActive('/deals') ? 'text-{{ conversion_colors.primary or "blue-600" }} bg-{{ conversion_colors.primary or "blue-50" }}' : ''
              }`}
            >
              Hot Deals
            </Link>
            
            <Link 
              href="/about" 
              className={`text-gray-700 hover:text-{{ conversion_colors.primary or 'blue-600' }} px-3 py-2 rounded-md text-sm font-medium transition-colors ${
                isActive('/about') ? 'text-{{ conversion_colors.primary or "blue-600" }} bg-{{ conversion_colors.primary or "blue-50" }}' : ''
              }`}
            >
              About
            </Link>
          </div>

          {/* Search Bar */}
          {showSearch && (
            <div className="hidden md:flex items-center">
              <form onSubmit={handleSearch} className="relative">
                <input
                  type="text"
                  placeholder="Search products..."
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  className="w-64 pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-{{ conversion_colors.primary or 'blue-500' }} focus:border-transparent transition-colors"
                />
                <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                  <svg className="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                  </svg>
                </div>
                <button
                  type="submit"
                  className="absolute inset-y-0 right-0 pr-3 flex items-center"
                >
                  <svg className="h-5 w-5 text-{{ conversion_colors.primary or 'blue-600' }} hover:text-{{ conversion_colors.primary or 'blue-800' }}" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 9l3 3-3 3m-6-3h12" />
                  </svg>
                </button>
              </form>
            </div>
          )}

          {/* Mobile menu button */}
          <div className="md:hidden">
            <button
              onClick={() => setIsMenuOpen(!isMenuOpen)}
              className="text-gray-700 hover:text-{{ conversion_colors.primary or 'blue-600' }} focus:outline-none focus:text-{{ conversion_colors.primary or 'blue-600' }}"
            >
              <svg className="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                {isMenuOpen ? (
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                ) : (
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
                )}
              </svg>
            </button>
          </div>
        </div>

        {/* Mobile Navigation Menu */}
        {isMenuOpen && (
          <div className="md:hidden border-t border-gray-200">
            <div className="px-2 pt-2 pb-3 space-y-1">
              
              {/* Mobile Search */}
              {showSearch && (
                <div className="px-3 py-2">
                  <form onSubmit={handleSearch} className="relative">
                    <input
                      type="text"
                      placeholder="Search products..."
                      value={searchQuery}
                      onChange={(e) => setSearchQuery(e.target.value)}
                      className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-{{ conversion_colors.primary or 'blue-500' }} focus:border-transparent"
                    />
                    <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                      <svg className="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                      </svg>
                    </div>
                  </form>
                </div>
              )}

              <Link 
                href="/" 
                className={`block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-{{ conversion_colors.primary or 'blue-600' }} hover:bg-{{ conversion_colors.primary or 'blue-50' }} ${
                  isActive('/') ? 'text-{{ conversion_colors.primary or "blue-600" }} bg-{{ conversion_colors.primary or "blue-50" }}' : ''
                }`}
                onClick={() => setIsMenuOpen(false)}
              >
                Home
              </Link>
              
              <Link 
                href="/categories" 
                className="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-{{ conversion_colors.primary or 'blue-600' }} hover:bg-{{ conversion_colors.primary or 'blue-50' }}"
                onClick={() => setIsMenuOpen(false)}
              >
                All Categories
              </Link>
              
              {categories.slice(0, 4).map((category) => (
                <Link 
                  key={category}
                  href={`/category/${category.toLowerCase().replace(' ', '-')}`}
                  className="block px-6 py-2 text-sm text-gray-600 hover:text-{{ conversion_colors.primary or 'blue-600' }} hover:bg-{{ conversion_colors.primary or 'blue-50' }}"
                  onClick={() => setIsMenuOpen(false)}
                >
                  {category}
                </Link>
              ))}
              
              <Link 
                href="/deals" 
                className={`block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-{{ conversion_colors.primary or 'blue-600' }} hover:bg-{{ conversion_colors.primary or 'blue-50' }} ${
                  isActive('/deals') ? 'text-{{ conversion_colors.primary or "blue-600" }} bg-{{ conversion_colors.primary or "blue-50" }}' : ''
                }`}
                onClick={() => setIsMenuOpen(false)}
              >
                Hot Deals
              </Link>
              
              <Link 
                href="/about" 
                className={`block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-{{ conversion_colors.primary or 'blue-600' }} hover:bg-{{ conversion_colors.primary or 'blue-50' }} ${
                  isActive('/about') ? 'text-{{ conversion_colors.primary or "blue-600" }} bg-{{ conversion_colors.primary or "blue-50" }}' : ''
                }`}
                onClick={() => setIsMenuOpen(false)}
              >
                About
              </Link>
            </div>
          </div>
        )}
      </div>

      {/* Trust Bar */}
      {% if trust_signals %}
      <div className="bg-{{ conversion_colors.primary or 'blue-600' }} text-white py-2">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-center space-x-8 text-sm font-medium">
            {% for signal in trust_signals[:3] %}
            <div className="flex items-center space-x-1">
              <svg className="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
              </svg>
              <span>{{ signal }}</span>
            </div>
            {% endfor %}
          </div>
        </div>
      </div>
      {% endif %}
    </nav>
  );
};

export default {{ name }};