import React from 'react';
import Image from 'next/image';
import Link from 'next/link';

interface {{ name }}Props {
  {% for prop_name, prop_type in props.items() %}
  {{ prop_name }}: {{ prop_type }};
  {% endfor %}
  brandName: string;
  tagline: string;
  description: string;
  ctaText: string;
  ctaLink: string;
  heroImage?: string;
  niche: string;
}

const {{ name }}: React.FC<{{ name }}Props> = ({
  {% for prop_name in props.keys() %}
  {{ prop_name }},
  {% endfor %}
  brandName,
  tagline,
  description,
  ctaText,
  ctaLink,
  heroImage,
  niche
}) => {
  const nicheKeywords = {
    'outdoor_gear': ['Adventure', 'Explore', 'Gear Up'],
    'fashion': ['Style', 'Trendy', 'Fashion Forward'],
    'tech': ['Innovation', 'Latest Tech', 'Smart Choice'],
    'home_improvement': ['Transform', 'Upgrade', 'Home Sweet Home'],
    'music': ['Sound', 'Rhythm', 'Musical'],
    'general': ['Quality', 'Affordable', 'Best Deals']
  };

  const keywords = nicheKeywords[niche] || nicheKeywords['general'];
  const randomKeyword = keywords[Math.floor(Math.random() * keywords.length)];

  return (
    <section className="relative overflow-hidden bg-gradient-to-r from-{{ conversion_colors.primary or 'blue-600' }} to-{{ conversion_colors.secondary or 'blue-800' }} text-white">
      {/* Background Pattern */}
      <div className="absolute inset-0 bg-black opacity-20"></div>
      <div className="absolute inset-0 bg-gradient-to-r from-transparent via-black/10 to-transparent"></div>
      
      <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="lg:grid lg:grid-cols-12 lg:gap-8 lg:items-center min-h-[60vh] py-12">
          
          {/* Text Content */}
          <div className="lg:col-span-6 xl:col-span-5">
            {/* Trust Badge */}
            {% if trust_signals %}
            <div className="flex items-center space-x-2 mb-4">
              <div className="bg-green-500 text-white px-3 py-1 rounded-full text-sm font-semibold">
                âœ“ {{ trust_signals[0] }}
              </div>
              <div className="bg-white/20 text-white px-3 py-1 rounded-full text-sm font-medium">
                {{ randomKeyword }} Store
              </div>
            </div>
            {% endif %}

            {/* Main Headline */}
            <h1 className="text-4xl sm:text-5xl lg:text-6xl font-bold leading-tight mb-6">
              {{ tagline }}
              <span className="block text-{{ conversion_colors.accent or 'yellow-400' }} mt-2">
                {{ brandName }}
              </span>
            </h1>

            {/* Description */}
            <p className="text-xl sm:text-2xl text-blue-100 mb-8 max-w-2xl">
              {{ description }}
            </p>

            {/* CTA Buttons */}
            <div className="flex flex-col sm:flex-row gap-4 mb-8">
              <Link
                href={ctaLink}
                className="inline-flex items-center justify-center px-8 py-4 text-lg font-semibold rounded-lg bg-{{ conversion_colors.accent or 'yellow-500' }} text-gray-900 hover:bg-{{ conversion_colors.accent or 'yellow-400' }} transition-colors duration-200 shadow-lg hover:shadow-xl"
              >
                {{ ctaText }}
                <svg className="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                </svg>
              </Link>
              
              <Link
                href="/categories"
                className="inline-flex items-center justify-center px-8 py-4 text-lg font-medium rounded-lg border-2 border-white text-white hover:bg-white hover:text-{{ conversion_colors.primary or 'blue-600' }} transition-colors duration-200"
              >
                Browse Categories
              </Link>
            </div>

            {/* Social Proof */}
            <div className="flex items-center space-x-6 text-blue-100">
              <div className="flex items-center space-x-1">
                <div className="flex">
                  {[...Array(5)].map((_, i) => (
                    <svg key={i} className="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                  ))}
                </div>
                <span className="ml-2 font-medium">4.9/5 Rating</span>
              </div>
              
              <div className="h-4 w-px bg-blue-300"></div>
              
              <div className="font-medium">
                10,000+ Happy Customers
              </div>
            </div>

            {/* Urgency Element */}
            {% if urgency_elements %}
            <div className="mt-6 p-4 bg-red-500 bg-opacity-90 rounded-lg">
              <div className="flex items-center space-x-2">
                <svg className="w-5 h-5 text-white animate-pulse" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clipRule="evenodd" />
                </svg>
                <span className="text-white font-semibold">{{ urgency_elements[0] }}</span>
              </div>
            </div>
            {% endif %}
          </div>

          {/* Hero Image */}
          <div className="lg:col-span-6 xl:col-span-7 mt-12 lg:mt-0">
            <div className="relative">
              {heroImage ? (
                <div className="relative aspect-video lg:aspect-square rounded-lg overflow-hidden shadow-2xl">
                  <Image
                    src={heroImage}
                    alt={`${brandName} Hero Image`}
                    fill
                    className="object-cover"
                    priority
                    sizes="(max-width: 768px) 100vw, 50vw"
                  />
                </div>
              ) : (
                <div className="relative aspect-video lg:aspect-square rounded-lg overflow-hidden shadow-2xl bg-gradient-to-br from-white/20 to-white/5 backdrop-blur-sm border border-white/20">
                  <div className="flex items-center justify-center h-full">
                    <div className="text-center">
                      <div className="w-24 h-24 mx-auto mb-4 bg-white/20 rounded-full flex items-center justify-center">
                        <svg className="w-12 h-12 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                        </svg>
                      </div>
                      <h3 className="text-2xl font-bold text-white mb-2">{{ brandName }}</h3>
                      <p className="text-blue-100">Your trusted {{ niche.replace('_', ' ').title() }} partner</p>
                    </div>
                  </div>
                </div>
              )}
              
              {/* Floating Elements */}
              <div className="absolute -top-4 -right-4 bg-{{ conversion_colors.accent or 'yellow-500' }} text-gray-900 px-4 py-2 rounded-full font-bold text-sm shadow-lg animate-bounce">
                Best Prices!
              </div>
              
              <div className="absolute -bottom-4 -left-4 bg-green-500 text-white px-4 py-2 rounded-full font-semibold text-sm shadow-lg">
                Free Shipping
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Wave Separator */}
      <div className="absolute bottom-0 left-0 right-0">
        <svg className="w-full h-8 text-white" preserveAspectRatio="none" viewBox="0 0 1200 120" fill="currentColor">
          <path d="M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z" opacity=".25"></path>
          <path d="M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z" opacity=".5"></path>
          <path d="M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z"></path>
        </svg>
      </div>
    </section>
  );
};

export default {{ name }};